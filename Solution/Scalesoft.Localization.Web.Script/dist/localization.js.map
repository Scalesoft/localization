{"version":3,"sources":["localization.ts"],"names":[],"mappings":"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","file":"localization.js","sourcesContent":["class Localization {\r\n    private mGlobalScope = \"global\";\r\n\r\n    private mCultureCookieName: string = \"Localization.Culture\";\r\n    private mCurrentCulture: string;\r\n\r\n    private readonly mDictionary: { [key: string]: LocalizationDictionary } = {};\r\n    private readonly mDictionaryQueue: { [key: string]: Array<(dictionary: LocalizationDictionary) => void> } = {};\r\n\r\n    private mPluralizedDictionary: { [key: string]: LocalizationPluralizationDictionary } = {};\r\n    private readonly mPluralizedDictionaryQueue: { [key: string]: Array<(dictionary: LocalizationPluralizationDictionary) => void> } = {};\r\n\r\n    private mSiteUrl: string;\r\n\r\n    /**\r\n     * @deprecated Use translateAsync\r\n     */\r\n    public translate(\r\n        text: string, scope?: string, cultureName?: string\r\n    ): ILocalizedString {\r\n        const dictionary = this.getDictionary(scope, cultureName);\r\n\r\n        const result = dictionary.translate(text);\r\n        if (result == null) {\r\n            return this.getFallbackTranslation(text, scope, cultureName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translateAsync(\r\n        onSuccess: (translation: ILocalizedString) => void, text: string, scope?: string, cultureName?: string\r\n    ) {\r\n        this.getDictionaryAsync((dictionary) => {\r\n            const result = dictionary.translate(text);\r\n            if (result == null) {\r\n                return this.getFallbackTranslation(text, scope, cultureName);\r\n            }\r\n\r\n            onSuccess(result);\r\n        }, scope, cultureName);\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use translateFormatAsync\r\n     */\r\n    public translateFormat(\r\n        text: string, parameters: string[], scope?: string, cultureName?: string\r\n    ): ILocalizedString {\r\n        const dictionary = this.getDictionary(scope, cultureName);\r\n\r\n        const result = dictionary.translateFormat(text, parameters);\r\n        if (result == null) {\r\n            return this.getFallbackTranslation(text, scope, cultureName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translateFormatAsync(\r\n        onSuccess: (translation: ILocalizedString) => void, text: string, parameters: string[], scope?: string, cultureName?: string,\r\n    ) {\r\n        this.getDictionaryAsync((dictionary) => {\r\n            const result = dictionary.translateFormat(text, parameters);\r\n            if (result == null) {\r\n                return this.getFallbackTranslation(text, scope, cultureName);\r\n            }\r\n\r\n            onSuccess(result);\r\n        }, scope, cultureName);\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use translatePluralizationAsync\r\n     */\r\n    public translatePluralization(\r\n        text: string, number: number, scope?: string, cultureName?: string\r\n    ): ILocalizedString {\r\n        const dictionary = this.getPluralizationDictionary(scope, cultureName);\r\n        try {\r\n            const result = dictionary.translatePluralization(text, number);\r\n            if (result == null) {\r\n                return this.getFallbackTranslation(text, scope, cultureName);\r\n            }\r\n\r\n            return result;\r\n        } catch (exception) {\r\n            return this.handleError(exception, text);\r\n        }\r\n    }\r\n\r\n    public translatePluralizationAsync(\r\n        onSuccess: (translation: ILocalizedString) => void, text: string, number: number, scope?: string, cultureName?: string\r\n    ) {\r\n        this.getPluralizationDictionaryAsync(\r\n            dictionary => {\r\n                try {\r\n                    const result = dictionary.translatePluralization(text, number);\r\n                    if (result == null) {\r\n                        return this.getFallbackTranslation(text, scope, cultureName);\r\n                    }\r\n\r\n                    onSuccess(result);\r\n                } catch (exception) {\r\n                    onSuccess(this.handleError(exception, text))\r\n                }\r\n            }, scope, cultureName\r\n        );\r\n    }\r\n\r\n    private getFallbackTranslation(text: string, scope: string, cultureName: string): ILocalizedString {\r\n        console.log(\r\n            `Localized string with key=${text} was not found in dictionary=${scope} with culture=${cultureName}`,\r\n        );\r\n\r\n        return {name: text, value: \"X{undefined}\", resourceNotFound: true};\r\n    }\r\n\r\n    private handleError(exception: Error, text: string) {\r\n        console.error(exception.message);\r\n\r\n        return {name: text, value: \"X{error}\", resourceNotFound: true};\r\n    }\r\n\r\n    public configureSiteUrl(siteUrl: string) {\r\n        this.mSiteUrl = siteUrl;\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use getDictionaryAsync\r\n     */\r\n    private getDictionary(scope?: string, cultureName?: string): LocalizationDictionary {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getLocalizationDictionary(scope, cultureName);\r\n    }\r\n\r\n    private getDictionaryAsync(onSuccess: (dictionary: LocalizationDictionary) => void, scope?: string, cultureName?: string) {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getLocalizationDictionaryAsync(scope, cultureName, onSuccess);\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use getPluralizationDictionaryAsync\r\n     */\r\n    private getPluralizationDictionary(scope?: string, cultureName?: string): LocalizationPluralizationDictionary {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getPluralizationLocalizationDictionary(scope, cultureName);\r\n    }\r\n\r\n    private getPluralizationDictionaryAsync(\r\n        onSuccess: (dictionary: LocalizationPluralizationDictionary) => void, scope?: string, cultureName?: string\r\n    ) {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getPluralizationLocalizationDictionaryAsync(scope, cultureName, onSuccess);\r\n    }\r\n\r\n    private checkCultureName(cultureName?: string): string {\r\n        if (cultureName) {\r\n            return cultureName;\r\n        }\r\n\r\n        return this.getCurrentCulture();\r\n    }\r\n\r\n    private checkScope(scope?: string): string {\r\n        if (scope) {\r\n            return scope;\r\n        }\r\n\r\n        return this.mGlobalScope;\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use getLocalizationDictionaryAsync\r\n     */\r\n    private getLocalizationDictionary(scope: string, cultureName: string): LocalizationDictionary {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        const dictionary = this.mDictionary[dictionaryKey];\r\n        if (typeof dictionary === \"undefined\") {\r\n            this.downloadDictionary(scope, cultureName);\r\n\r\n            return this.mDictionary[dictionaryKey];\r\n        }\r\n\r\n        return dictionary;\r\n    }\r\n\r\n    private getLocalizationDictionaryAsync(\r\n        scope: string, cultureName: string, onSuccess: (dictionary: LocalizationDictionary) => void\r\n    ): void {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        const dictionary = this.mDictionary[dictionaryKey];\r\n\r\n        if (dictionary === undefined) {\r\n            this.downloadDictionaryAsync(scope, cultureName, onSuccess);\r\n        } else {\r\n            onSuccess(dictionary);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use getPluralizationLocalizationDictionaryAsync\r\n     */\r\n    private getPluralizationLocalizationDictionary(scope: string, cultureName: string):\r\n        LocalizationPluralizationDictionary {\r\n        let dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        let dictionary = this.mPluralizedDictionary[dictionaryKey];\r\n        if (typeof dictionary === \"undefined\") {\r\n            this.downloadPluralizedDictionary(scope, cultureName);\r\n\r\n            return this.mPluralizedDictionary[dictionaryKey];\r\n        }\r\n\r\n        return dictionary;\r\n    }\r\n\r\n    private getPluralizationLocalizationDictionaryAsync(\r\n        scope: string, cultureName: string, onSuccess: (dictionary: LocalizationPluralizationDictionary) => void\r\n    ) {\r\n        let dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        let dictionary = this.mPluralizedDictionary[dictionaryKey];\r\n\r\n        if (dictionary === undefined) {\r\n            this.downloadPluralizedDictionaryAsync(scope, cultureName, onSuccess);\r\n        } else {\r\n            onSuccess(dictionary);\r\n        }\r\n    }\r\n\r\n    private dictionaryKey(scope: string, cultureName: string): string {\r\n        return scope.concat(\"|\", cultureName);\r\n    }\r\n\r\n    /**\r\n     *@deprecated Use downloadDictionaryAsync\r\n     */\r\n    private downloadDictionary(\r\n        scope: string, cultureName: string\r\n    ): void {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n\r\n        if (this.mDictionaryQueue[scope] === undefined) {\r\n            this.mDictionaryQueue[scope] = [];\r\n        }\r\n\r\n        const xmlHttpRequest = new XMLHttpRequest();\r\n\r\n        xmlHttpRequest.onreadystatechange = () => {\r\n            if (\r\n                xmlHttpRequest.readyState === XMLHttpRequest.DONE\r\n                && xmlHttpRequest.status === 200\r\n            ) {\r\n                let response = xmlHttpRequest.responseText;\r\n\r\n                if (this.mDictionary[dictionaryKey] === undefined) {\r\n                    this.mDictionary[dictionaryKey] = new LocalizationDictionary(response);\r\n                }\r\n\r\n                this.processDictionaryQueue(scope, dictionaryKey);\r\n            }\r\n        };\r\n\r\n        xmlHttpRequest.open(\r\n            \"GET\",\r\n            `${this.getBaseUrl()}/Localization/Dictionary?scope=${scope}`,\r\n            false\r\n        );\r\n        xmlHttpRequest.send();\r\n    }\r\n\r\n    private downloadDictionaryAsync(\r\n        scope: string, cultureName: string, onSuccess: (dictionary: LocalizationDictionary) => void\r\n    ): void {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n\r\n        if (this.mDictionaryQueue[scope] === undefined) {\r\n            this.mDictionaryQueue[scope] = [];\r\n\r\n            const xmlHttpRequest = new XMLHttpRequest();\r\n\r\n            xmlHttpRequest.onreadystatechange = () => {\r\n                if (\r\n                    xmlHttpRequest.readyState === XMLHttpRequest.DONE\r\n                    && xmlHttpRequest.status === 200\r\n                ) {\r\n                    let response = xmlHttpRequest.responseText;\r\n\r\n                    if (this.mDictionary[dictionaryKey] === undefined) {\r\n                        this.mDictionary[dictionaryKey] = new LocalizationDictionary(response);\r\n                    }\r\n\r\n                    this.processDictionaryQueue(scope, dictionaryKey);\r\n                }\r\n            };\r\n\r\n            xmlHttpRequest.open(\r\n                \"GET\",\r\n                `${this.getBaseUrl()}/Localization/Dictionary?scope=${scope}`,\r\n                true\r\n            );\r\n            xmlHttpRequest.send();\r\n        }\r\n\r\n        this.mDictionaryQueue[scope].push(onSuccess);\r\n\r\n        this.processDictionaryQueue(scope, dictionaryKey);\r\n    }\r\n\r\n    private processDictionaryQueue(scope: string, dictionaryKey: string): void {\r\n        if (this.mDictionary[dictionaryKey] !== undefined) {\r\n            let onSuccessQueue = this.mDictionaryQueue[scope].shift();\r\n            while (onSuccessQueue !== undefined) {\r\n                onSuccessQueue(this.mDictionary[dictionaryKey]);\r\n\r\n                onSuccessQueue = this.mDictionaryQueue[scope].shift();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use downloadPluralizedDictionaryAsync\r\n     */\r\n    private downloadPluralizedDictionary(\r\n        scope: string, cultureName: string\r\n    ): void {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n\r\n        if (this.mPluralizedDictionaryQueue[scope] === undefined) {\r\n            this.mPluralizedDictionaryQueue[scope] = [];\r\n        }\r\n\r\n        const xmlHttpRequest = new XMLHttpRequest();\r\n\r\n        xmlHttpRequest.onreadystatechange = () => {\r\n            if (\r\n                xmlHttpRequest.readyState === XMLHttpRequest.DONE\r\n                && xmlHttpRequest.status === 200\r\n            ) {\r\n                let response = xmlHttpRequest.responseText;\r\n\r\n                if (this.mPluralizedDictionary[dictionaryKey] === undefined) {\r\n                    this.mPluralizedDictionary[dictionaryKey] = new LocalizationPluralizationDictionary(response);\r\n                }\r\n\r\n                this.processPluralizedDictionaryQueue(scope, dictionaryKey);\r\n            }\r\n        };\r\n\r\n        xmlHttpRequest.open(\r\n            \"GET\",\r\n            `${this.getBaseUrl()}/Localization/PluralizedDictionary?scope=${scope}`,\r\n            false\r\n        );\r\n        xmlHttpRequest.send();\r\n    }\r\n\r\n    private downloadPluralizedDictionaryAsync(\r\n        scope: string, cultureName: string, onSuccess: (dictionary: LocalizationPluralizationDictionary) => void\r\n    ): void {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n\r\n        if (this.mPluralizedDictionaryQueue[scope] === undefined) {\r\n            this.mPluralizedDictionaryQueue[scope] = [];\r\n\r\n            const xmlHttpRequest = new XMLHttpRequest();\r\n\r\n            xmlHttpRequest.onreadystatechange = () => {\r\n                if (\r\n                    xmlHttpRequest.readyState === XMLHttpRequest.DONE\r\n                    && xmlHttpRequest.status === 200\r\n                ) {\r\n                    let response = xmlHttpRequest.responseText;\r\n\r\n                    if (this.mPluralizedDictionary[dictionaryKey] === undefined) {\r\n                        this.mPluralizedDictionary[dictionaryKey] = new LocalizationPluralizationDictionary(response);\r\n                    }\r\n\r\n                    this.processPluralizedDictionaryQueue(scope, dictionaryKey);\r\n                }\r\n            };\r\n\r\n            xmlHttpRequest.open(\r\n                \"GET\",\r\n                `${this.getBaseUrl()}/Localization/PluralizedDictionary?scope=${scope}`,\r\n                true\r\n            );\r\n            xmlHttpRequest.send();\r\n        }\r\n\r\n        this.mPluralizedDictionaryQueue[scope].push(onSuccess);\r\n\r\n        this.processPluralizedDictionaryQueue(scope, dictionaryKey);\r\n    }\r\n\r\n    private processPluralizedDictionaryQueue(scope: string, dictionaryKey: string): void {\r\n        if (this.mPluralizedDictionary[dictionaryKey] !== undefined) {\r\n            let onSuccessQueue = this.mPluralizedDictionaryQueue[scope].shift();\r\n            while (onSuccessQueue !== undefined) {\r\n                onSuccessQueue(this.mPluralizedDictionary[dictionaryKey]);\r\n\r\n                onSuccessQueue = this.mPluralizedDictionaryQueue[scope].shift();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getBaseUrl(): string {\r\n        let baseUrl = this.mSiteUrl;\r\n        if (baseUrl && baseUrl.charAt(baseUrl.length - 1) === \"/\") {\r\n            baseUrl = baseUrl.substring(0, baseUrl.length - 1);\r\n        }\r\n\r\n        return baseUrl;\r\n    }\r\n\r\n    public getCurrentCulture(): string {\r\n        if (typeof this.mCurrentCulture === \"undefined\") {\r\n            const currentCulture = this.getCurrentCultureCookie();\r\n            this.setCurrentCulture(currentCulture);\r\n        }\r\n\r\n        return this.mCurrentCulture;\r\n    }\r\n\r\n    private setCurrentCulture(culture: string) {\r\n        this.mCurrentCulture = culture;\r\n    }\r\n\r\n    private getCurrentCultureCookie(): string {\r\n        return LocalizationUtils.getCookie(this.mCultureCookieName);\r\n    }\r\n}\r\n\r\nclass LocalizationDictionary {\r\n    private readonly mDictionary: { [key: string]: ILocalizedString };\r\n\r\n    constructor(dictionary: string) {\r\n        this.mDictionary = JSON.parse(dictionary);\r\n    }\r\n\r\n    public translate(text: string): ILocalizedString {\r\n        const result = this.mDictionary[text];\r\n        if (typeof result === \"undefined\") {\r\n            return null;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translateFormat(text: string, parameters: string[]): ILocalizedString {\r\n        const translation = this.translate(text);\r\n\r\n        const formatedText = !parameters ? translation.value : this.formatString(translation, parameters);\r\n\r\n        return {name: text, value: formatedText, resourceNotFound: translation.resourceNotFound};\r\n    }\r\n\r\n    private formatString(str: ILocalizedString, obj: string[]): string {\r\n        return str.value.replace(/\\{\\s*([^}\\s]+)\\s*\\}/g, (m, p1, offset, string) => obj[p1]);\r\n    }\r\n}\r\n\r\nclass LocalizationPluralizationDictionary {\r\n    private readonly mDictionary: { [key: string]: IPluralizedString };\r\n\r\n    constructor(dictionary: string) {\r\n        this.mDictionary = JSON.parse(dictionary);\r\n    }\r\n\r\n    public translatePluralization(text: string, number: number): ILocalizedString {\r\n        const pluralizedString = this.mDictionary[text];\r\n        if (typeof pluralizedString === \"undefined\" || pluralizedString === null) {\r\n            return null;\r\n        }\r\n        for (let interval of pluralizedString.intervals) {\r\n            const translationInterval = interval.interval;\r\n\r\n            if (LocalizationUtils.isInInterval(number, translationInterval)) {\r\n                return interval.localizedString;\r\n            }\r\n\r\n        }\r\n\r\n        return pluralizedString.defaultLocalizedString;\r\n\r\n    }\r\n}\r\n\r\ninterface ILocalizedString {\r\n    name: string;\r\n    resourceNotFound: boolean;\r\n    value: string;\r\n}\r\n\r\ninterface IPluralizedString {\r\n    intervals: IIntervalWithTranslation[];\r\n    defaultLocalizedString: ILocalizedString;\r\n}\r\n\r\ninterface IIntervalWithTranslation {\r\n    interval: PluralizationInterval;\r\n    localizedString: ILocalizedString;\r\n}\r\n\r\nclass PluralizationInterval {\r\n    public readonly start: number;\r\n    public readonly end: number;\r\n\r\n    constructor(start: number, end: number) {\r\n        if (start > end) {\r\n            const intervalErrorMsg = \"The start value should be less or equal than end.\";\r\n\r\n            throw new Error(intervalErrorMsg);\r\n        }\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nclass LocalizationUtils {\r\n\r\n    public static getCookie(name: string): string {\r\n        name = name + \"=\";\r\n        return document.cookie\r\n                .split(\";\")\r\n                .map(c => c.trim())\r\n                .filter(cookie => cookie.indexOf(name) === 0)\r\n                .map(cookie => decodeURIComponent(cookie.substring(name.length)))[0]\r\n            || null;\r\n    }\r\n\r\n    /*\r\n     * Returns true when value is in the pluralization interval\r\n     */\r\n    public static isInInterval(value: number, interval: PluralizationInterval): boolean {\r\n        if (!interval) {\r\n            return false;\r\n        }\r\n\r\n        return interval.start <= value && value <= interval.end;\r\n    }\r\n}\r\n"]}