{"version":3,"sources":["localization.ts"],"names":[],"mappings":"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","file":"localization.js","sourcesContent":["class Localization {\r\n    private mGlobalScope = \"global\";\r\n\r\n    private mCultureCookieName: string = \"Localization.Culture\";\r\n    private mCurrentCulture: string;\r\n\r\n    private mDictionary: { [key: string]: LocalizationDictionary } = {};\r\n\r\n    private mPluralizedDictionary: { [key: string]: LocalizationPluralizationDictionary } = {};\r\n\r\n    private mSiteUrl: string;\r\n\r\n    public translate(text: string, scope?: string, cultureName?: string): ILocalizedString {\r\n        let dictionary = this.getDictionary(scope, cultureName);\r\n\r\n        var result = dictionary.translate(text);\r\n        if (result == null) {\r\n            return this.getFallbackTranslation(text, scope, cultureName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translateFormat(text: string, parameters: string[], scope?: string, cultureName?: string): ILocalizedString {\r\n        let dictionary = this.getDictionary(scope, cultureName);\r\n\r\n        var result = dictionary.translateFormat(text, parameters);\r\n        if (result == null) {\r\n            return this.getFallbackTranslation(text, scope, cultureName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translatePluralization(text: string, number: number, scope?: string, cultureName?: string):\r\n        ILocalizedString {\r\n        const dictionary = this.getPluralizationDictionary(scope, cultureName);\r\n\r\n        try {\r\n            const result = dictionary.translatePluralization(text, number);\r\n            if (result == null) {\r\n                return this.getFallbackTranslation(text, scope, cultureName);\r\n            }\r\n\r\n            return result;\r\n        } catch (exception) {\r\n            return this.handleError(exception, text);\r\n        }\r\n    }\r\n\r\n    private getFallbackTranslation(text: string, scope: string, cultureName: string): ILocalizedString {\r\n        console.log(\r\n            `Localized string with key=${text} was not found in dictionary=${scope} with culture=${cultureName}`);\r\n        const localizedString: ILocalizedString = { name: text, value: \"X{undefined}\", resourceNotFound: true };\r\n        return localizedString;\r\n    }\r\n\r\n    private handleError(exception: Error, text: string) {\r\n        console.error(exception.message);\r\n        const localizedString: ILocalizedString = { name: text, value: \"X{error}\", resourceNotFound: true };\r\n        return localizedString;\r\n    }\r\n\r\n    public configureSiteUrl(siteUrl: string) {\r\n        this.mSiteUrl = siteUrl;\r\n    }\r\n\r\n    private getDictionary(scope?: string, cultureName?: string): LocalizationDictionary {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getLocalizationDictionary(scope, cultureName);\r\n    }\r\n\r\n    private getPluralizationDictionary(scope?: string, cultureName?: string): LocalizationPluralizationDictionary {\r\n        scope = this.checkScope(scope);\r\n        cultureName = this.checkCultureName(cultureName);\r\n\r\n        return this.getPluralizationLocalizationDictionary(scope, cultureName);\r\n    }\r\n\r\n    private checkCultureName(cultureName?: string): string {\r\n        if (cultureName) {\r\n            return cultureName;\r\n        }\r\n\r\n        return this.getCurrentCulture();\r\n    }\r\n\r\n    private checkScope(scope?: string): string {\r\n        if (scope) {\r\n            return scope;\r\n        }\r\n\r\n        return this.mGlobalScope;\r\n    }\r\n\r\n    private getLocalizationDictionary(scope: string, cultureName: string): LocalizationDictionary {\r\n        const dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        const dictionary = this.mDictionary[dictionaryKey];\r\n        if (typeof dictionary === \"undefined\") {\r\n            this.downloadDictionary(scope, cultureName);\r\n\r\n            return this.mDictionary[dictionaryKey];\r\n        }\r\n\r\n        return dictionary;\r\n    }\r\n\r\n    private getPluralizationLocalizationDictionary(scope: string, cultureName: string):\r\n        LocalizationPluralizationDictionary {\r\n        let dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n        let dictionary = this.mPluralizedDictionary[dictionaryKey];\r\n        if (typeof dictionary === \"undefined\") {\r\n            this.downloadPluralizedDictionary(scope, cultureName);\r\n\r\n            return this.mPluralizedDictionary[dictionaryKey];\r\n        }\r\n\r\n        return dictionary;\r\n    }\r\n\r\n    private dictionaryKey(scope: string, cultureName: string): string {\r\n        return scope.concat(\"|\", cultureName);\r\n    }\r\n\r\n    private downloadDictionary(scope: string, cultureName: string) {\r\n        let xmlHttpRequest = new XMLHttpRequest();\r\n\r\n        xmlHttpRequest.onreadystatechange = () => {\r\n            if (xmlHttpRequest.readyState === XMLHttpRequest.DONE) {\r\n                if (xmlHttpRequest.status === 200) {\r\n                    let response = xmlHttpRequest.responseText;\r\n                    let dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n                    this.mDictionary[dictionaryKey] = new LocalizationDictionary(response);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseUrl = this.mSiteUrl;\r\n        if (baseUrl && baseUrl.charAt(baseUrl.length - 1) === \"/\") {\r\n            baseUrl = baseUrl.substring(0, baseUrl.length - 1);\r\n        }\r\n        xmlHttpRequest.open(\"GET\", `${baseUrl}/Localization/Dictionary?scope=${scope}`, false);\r\n        xmlHttpRequest.send();\r\n    }\r\n\r\n    private downloadPluralizedDictionary(scope: string, cultureName: string) {\r\n        let xmlHttpRequest = new XMLHttpRequest();\r\n\r\n        xmlHttpRequest.onreadystatechange = () => {\r\n            if (xmlHttpRequest.readyState === XMLHttpRequest.DONE) {\r\n                if (xmlHttpRequest.status === 200) {\r\n                    let response = xmlHttpRequest.responseText;\r\n                    let dictionaryKey = this.dictionaryKey(scope, cultureName);\r\n                    this.mPluralizedDictionary[dictionaryKey] = new LocalizationPluralizationDictionary(response);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseUrl = this.mSiteUrl;\r\n        if (baseUrl && baseUrl.charAt(baseUrl.length - 1) === \"/\") {\r\n            baseUrl = baseUrl.substring(0, baseUrl.length - 1);\r\n        }\r\n        xmlHttpRequest.open(\"GET\", `${baseUrl}/Localization/PluralizedDictionary?scope=${scope}`, false);\r\n        xmlHttpRequest.send();\r\n    }\r\n\r\n    public getCurrentCulture(): string {\r\n        if (this.mCurrentCulture === \"\") {\r\n            const currentCulture = this.getCurrentCultureCookie();\r\n            this.setCurrentCulture(currentCulture);\r\n        }\r\n\r\n        return this.mCurrentCulture;\r\n    }\r\n\r\n    private setCurrentCulture(culture: string) {\r\n        this.mCurrentCulture = culture;\r\n    }\r\n\r\n    private getCurrentCultureCookie(): string {\r\n        return LocalizationUtils.getCookie(this.mCultureCookieName);\r\n    }\r\n}\r\n\r\nclass LocalizationDictionary {\r\n    private mDictionary: { [key: string]: ILocalizedString };\r\n\r\n    constructor(dictionary: string) {\r\n        this.mDictionary = JSON.parse(dictionary);\r\n    }\r\n\r\n    public translate(text: string): ILocalizedString {\r\n        const result = this.mDictionary[text];\r\n        if (typeof result === \"undefined\") {\r\n            return null;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public translateFormat(text: string, parameters: string[]): ILocalizedString {\r\n        const translation = this.translate(text);\r\n\r\n        const formatedText = !parameters ? translation.value : this.formatString(translation, parameters);\r\n        const localizedString: ILocalizedString = { name: text, value: formatedText, resourceNotFound: translation.resourceNotFound };\r\n\r\n        return localizedString;\r\n    }\r\n\r\n    private formatString(str: ILocalizedString, obj: string[]): string {\r\n        return str.value.replace(/\\{\\s*([^}\\s]+)\\s*\\}/g, (m, p1, offset, string) => obj[p1]);\r\n    }\r\n}\r\n\r\nclass LocalizationPluralizationDictionary {\r\n    private mDictionary: { [key: string]: IClientPluralizedString };\r\n\r\n    constructor(dictionary: string) {\r\n        this.mDictionary = JSON.parse(dictionary);\r\n    }\r\n\r\n    public translatePluralization(text: string, number: number): ILocalizedString {\r\n        const pluralizedString = this.mDictionary[text];\r\n        if (typeof pluralizedString === \"undefined\" || pluralizedString === null) {\r\n            return null;\r\n        }\r\n        const requestedInterval = new PluralizationInterval(number, number);\r\n        for (let interval of pluralizedString.intervals) {              \r\n                const translationInterval = interval.interval;\r\n\r\n                if (translationInterval.isInInterval(requestedInterval)) {\r\n                    return interval.localizedString;\r\n                }\r\n            \r\n        }\r\n\r\n        return pluralizedString.defaultLocalizedString;\r\n\r\n    }\r\n}\r\n\r\ninterface ILocalizedString {\r\n    name: string;\r\n    resourceNotFound: boolean;\r\n    value: string;\r\n}\r\n\r\ninterface IClientPluralizedString {\r\n    intervals: IClientIntervalWithTranslation[];\r\n    defaultLocalizedString: ILocalizedString;\r\n}\r\n\r\ninterface IClientIntervalWithTranslation {\r\n    interval: PluralizationInterval;\r\n    localizedString: ILocalizedString;\r\n}\r\n\r\nclass PluralizationInterval {\r\n    public readonly start: number;\r\n    public readonly end: number;\r\n\r\n    constructor(start: number, end: number) {\r\n        if (start > end) {\r\n            const intervalErrorMsg = \"The start value should be less or equal than end.\";\r\n\r\n            throw new Error(intervalErrorMsg);\r\n        }\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    public isOverlaping(obj: PluralizationInterval): boolean {\r\n        if (!obj) {\r\n            throw new Error(\"Interval is not defined\");\r\n        }\r\n\r\n        return this.start <= obj.start && obj.end <= this.end;\r\n    }\r\n\r\n    public isInInterval(obj: PluralizationInterval): boolean {\r\n        if (obj == null) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof this != typeof obj) {\r\n            return false;\r\n        }\r\n\r\n        return this.isOverlaping(obj);\r\n    }\r\n}\r\n\r\nclass LocalizationUtils {\r\n\r\n    static getCookie(name: string): string {\r\n        name = name + \"=\";\r\n        return document.cookie\r\n            .split(\";\")\r\n            .map(c => c.trim())\r\n            .filter(cookie => {\r\n                return cookie.indexOf(name) === 0;\r\n            })\r\n            .map(cookie => {\r\n                return decodeURIComponent(cookie.substring(name.length));\r\n            })[0] ||\r\n            null;\r\n    }\r\n}"]}